/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.27).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package backend.shop.api;

import io.swagger.annotations.*;
import common.api.ResponseStatus;
import shop.OrderWaitingResponse;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2022-04-16T03:40:20.409Z")

@Validated
@Api(value = "backend/shop", description = "the shop API")
@RequestMapping(value = "/v1")
public interface ShopApi {

    @ApiOperation(value = "Get list order in queue", nickname = "getListOrderInQueue", notes = "", response = OrderWaitingResponse.class, authorizations = {
        @Authorization(value = "shop_auth", scopes = {
            @AuthorizationScope(scope = "read", description = "read shop entity")
            })
    }, tags={"backend/shop", })
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "successful operation", response = OrderWaitingResponse.class) })
    @RequestMapping(value = "/shop/order/",
        produces = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<OrderWaitingResponse> getListOrderInQueue(@ApiParam(value = "clientId") @RequestHeader(value = "clientId", required = false) String clientId, @ApiParam(value = "jwt token contain user infomation and user role") @RequestHeader(value = "bearer", required = false) String bearer);


    @ApiOperation(value = "Process Order ", nickname = "processOrder", notes = "", response = ResponseStatus.class, authorizations = {
        @Authorization(value = "shop_auth", scopes = {
            @AuthorizationScope(scope = "write", description = "Grants read access modify shop entity in your account")
            })
    }, tags={"backend/shop", })
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "successful operation", response = ResponseStatus.class) })
    @RequestMapping(value = "/shop/order/",
        produces = { "application/json" },
        method = RequestMethod.PATCH)
    ResponseEntity<ResponseStatus> processOrder(@ApiParam(value = "clientId") @RequestHeader(value = "clientId", required = false) String clientId, @ApiParam(value = "") @Valid @RequestBody Object body);
}
